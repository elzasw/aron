plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
//    id 'org.unbroken-dome.xjc' version '2.0.0' /*generating java classes from xsd*/ /*now wsdl plugin does it because xsd is linked from there*/
    id 'no.nils.wsdl2java' version '0.12'   /*generating java classes from wsdl*/
    id 'java'
}

group 'cz.aron.badatelna'
version '0.0.13'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
    maven {
        url 'https://repo.spring.io/snapshot/'
    }
    maven {
        url 'http://10.2.0.2:8080/artifactory/repo'
    }
}

//sourceSets { /* this was for org.unbroken-dome.xjc plugin*/
//    main {
////        xjcCatalog {  //parsing catalog is bugged, can't use
////            srcDir 'src/main/schema'    // pick up catalogs from a directory (claimed default dir doesn't work)
////            include '**/*.cat'  // use the .cat file extension
////        }
//        resources {
//            srcDirs "src/main/resources", "src/main/schema" /*WebServiceConfig needs this xsd on classpath for creating wsdl, but jaxb needs it in that folder to generate stubs*/
//        }
//    }
//}

wsdl2java {
    wsdlDir = file("./src/main/resources/wsdl") // define to support incremental build
    wsdlsToGenerate = [   //  2d-array of wsdls and cxf-parameters
                          ["-encoding", "UTF-8", //or it does windows-1250 on windows
//                           "-p", "cz.aron.apux.client", //or it conflicts with classes generated by xsd plugin for server
                           /*"-catalog", "$wsdlDir/catalog", */ //couldn't find right way to specify xsd location in catalog, had to modify wsdl itself
                           "$wsdlDir/aron_transform_agent.wsdl"]
    ]
    encoding = 'utf-8'
    cxfVersion = '3.3.2'
}

bootJar {
    layered {
        enabled = true
    }
}

tasks.register("buildExecutableJar") {
    group = 'build'
    description = 'Build fully executable JAR to be deployed on server (not compatible with docker)'
    bootJar {
        launchScript()
        layered {
            enabled = true
        }
    }
    dependsOn bootJar
}

dependencies {
    implementation('cz.inqool.eas:common:0.0.1') {
        exclude group: 'org.springframework.session', module: 'spring-session-data-redis'
        exclude group: 'io.lettuce', module: 'lettuce-core'
    }

    annotationProcessor 'cz.inqool:entity-views-processor:0.5.0'
    testAnnotationProcessor 'cz.inqool:entity-views-processor:0.5.0'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'

    implementation 'org.apache.groovy:groovy-jsr223:4.0.14'

    compileOnly "org.projectlombok:lombok"
    testCompileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"

    annotationProcessor "com.querydsl:querydsl-apt::jpa"
    testAnnotationProcessor "com.querydsl:querydsl-apt::jpa"

    implementation 'org.liquibase:liquibase-core'

    implementation 'jakarta.annotation:jakarta.annotation-api'  /*annotations like @Generated, explicitly or it can't find them*/
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    testAnnotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.3.2'  /*swagger*/

    implementation('com.lightcomp.ft:file-transfer:1.7') {  /*receiving input data*/
        exclude group: 'org.slf4j', module: 'slf4j-log4j12' /*conflicts with logback*/
    }
    wsdl2java 'com.sun.xml.bind:jaxb-impl:2.3.3' /* or the wsdl plugin crashes on missing class */
}